#! usr/bin/python
#coding=utf-8
from django.shortcuts import render
from django.template.loader import get_template
from django.template import Context
from django.contrib import auth
from django.contrib.auth.decorators import login_required
from django import forms
from django.contrib.auth.forms import UserCreationForm
from django.http import HttpResponseRedirect
from django.template import loader, Context
from django.http import HttpResponse
from django.shortcuts import render_to_response
from django.template import RequestContext
from django.contrib.auth.models import User
from models import *
from admin import *
import datetime





def hello(request):
        return HttpResponse("Hello World")


def check_user(request):
	if request.user:
		users = User.objects.filter(name = request.user) 
		if users: 
			return HttpResponse('user is exits')
	print request.user
	return  HttpResponse('user not exits')


@login_required
def show_color(request):
	if "favorite_color" in request.COOKIES:
		return HttpResponse("Your favorite color is %s" % request.COOKIES["favorite_color"])
	else:
		return HttpResponse("You don't have a favorite color.")


def check_login(request):
    if request.user.is_authenticated():
        # Do something for authenticated users.
        return HttpResponse("Your Login Success")
    else:
        return HttpResponse("Your Not Login")
        # Do something for anonymous users.


def login_view(request):
 	if request.method == 'POST':
    		username = str(request.POST.get('username', ''))
    		password = request.POST.get('password', '')
    		user = auth.authenticate(username=username, password=password)
    		if user is not None and user.is_active:
# Correct password, and the user is marked "active"
        		auth.login(request, user)
    # Redirect to a success page.
       	 		return HttpResponse("Your Login Success")
    #  return HttpResponseRedirect("/account/loggedin/")
    		else:
#Show an error page
        		return HttpResponse("Your Login Error")
    #    return HttpResponseRedirect("/account/invalid/")


def register(request):
    if request.method == 'POST':
	print 'post',request.POST
        form = UserCreateForm(request.POST)
        if form.is_valid():
           new_user = form.save()
           return HttpResponseRedirect("/accounts/profile/")
    else:
            form = UserCreateForm()
            if form.is_valid():
                new_user = form.save()
                return HttpResponseRedirect("/books/")
    return render_to_response("registration/register.html", {'form': form,})





@login_required
def profile(request):
    print request.user
    return render_to_response('hello.html',
    {'message': 'I am the second view.'},context_instance=RequestContext(request))



#return HttpResponse("Your Login Success %s"%request.user.username)
